#!/bin/bash

# Output file
OUTPUT_FILE="installed_user_packages_$(date +%Y%m%d_%H%M%S).txt"
echo "Generating user-installed package list..." > "$OUTPUT_FILE"

# Temporary file for storing package names
TEMP_FILE=$(mktemp)

# Function to collect and append unique package names
add_to_list() {
    while read -r pkg; do
        echo "$pkg" >> "$TEMP_FILE"
    done
}

# === RPM Packages (Filtering System Packages) ===
echo -e "\n===== RPM User-Installed Packages =====" >> "$OUTPUT_FILE"
if command -v rpm &>/dev/null; then
    rpm -qa --queryformat '%{NAME} %{INSTALLTIME}\n' | sort -k2 -n | awk '{print $1}' | add_to_list
else
    echo "RPM not found" >> "$OUTPUT_FILE"
fi

# === DNF User-Installed Packages ===
echo -e "\n===== DNF User-Installed Packages =====" >> "$OUTPUT_FILE"
if command -v dnf &>/dev/null; then
    dnf history userinstalled | awk '{print $1}' | tail -n +3 | sort | uniq | add_to_list
else
    echo "DNF not found" >> "$OUTPUT_FILE"
fi

# === YUM User-Installed Packages ===
echo -e "\n===== YUM User-Installed Packages =====" >> "$OUTPUT_FILE"
if command -v yum &>/dev/null; then
    yum list installed | grep '@' | awk '{print $1}' | sort | uniq | add_to_list
else
    echo "YUM not found" >> "$OUTPUT_FILE"
fi

# === PIP User-Installed Packages ===
echo -e "\n===== PIP User-Installed Packages =====" >> "$OUTPUT_FILE"
if command -v pip &>/dev/null; then
    pip list --not-required --format=freeze | cut -d= -f1 | sort | add_to_list
elif command -v pip3 &>/dev/null; then
    pip3 list --not-required --format=freeze | cut -d= -f1 | sort | add_to_list
else
    echo "PIP not found" >> "$OUTPUT_FILE"
fi

# Remove duplicates and save the final list
sort -u "$TEMP_FILE" >> "$OUTPUT_FILE"
rm -f "$TEMP_FILE"

echo "User-installed package list saved to $OUTPUT_FILE"
