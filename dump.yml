import json
import sys
import re
from deepdiff import DeepDiff

def load_json(file_path):
    with open(file_path, 'r') as file:
        return json.load(file)

def extract_version_from_filename(file_path):
    match = re.search(r'(\d+_\d+_\d+)\.json$', file_path)
    return match.group(1) if match else "unknown"

def compare_versions(prod_data, latest_data):
    changes = []
    
    for key, old_version in prod_data.items():
        new_version = latest_data.get(key, "0.0.0")
        if old_version != new_version:
            changes.append(f"{key}: {old_version} >> {new_version}")
    
    return "\n".join(changes)

def generate_report(prod_file, latest_file, output_file):
    prod_data = load_json(prod_file)
    latest_data = load_json(latest_file)
    
    prod_version = extract_version_from_filename(prod_file)
    latest_version = latest_data.get("image_version", "unknown")
    
    version_diff = compare_versions(prod_data, latest_data)
    
    report = f"""
## What changed between {prod_version} (prod) and {latest_version} (latest)

```bash
image version: {prod_version} >> {latest_version}

*********** Changes *********************

{version_diff}

*********** End of Changes *********************
```

## {latest_version} Full Image State (latest)
```json
{json.dumps(latest_data, indent=4)}
```

## {prod_version} Full Image State (prod)
```json
{json.dumps(prod_data, indent=4)}
```
"""
    
    with open(output_file, 'w') as file:
        file.write(report)
    
    print(f"Report generated and saved to {output_file}")

if __name__ == "__main__":
    if len(sys.argv) != 4:
        print("Usage: python compare_reports.py <prod_json> <latest_json> <output_md>")
        sys.exit(1)
    
    prod_json = sys.argv[1]
    latest_json = sys.argv[2]
    output_md = sys.argv[3]
    
    generate_report(prod_json, latest_json, output_md)
