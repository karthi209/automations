name: Submodule Changelog

on:
  workflow_dispatch:
    inputs:
      old_tag:
        description: 'Old Tag (e.g., v1.0.0)'
        required: true
      new_tag:
        description: 'New Tag (e.g., v1.1.0)'
        required: true

jobs:
  compare-submodules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we fetch all tags and history
          submodules: true  # Fetch submodules

      - name: Generate Submodule Changelog
        run: |
          OLD_TAG=${{ github.event.inputs.old_tag }}
          NEW_TAG=${{ github.event.inputs.new_tag }}
          GITHUB_URL="https://github.com/${{ github.repository }}"

          echo "Generating changelog links for submodules between $OLD_TAG and $NEW_TAG..."

          echo -e "\n### Main Repository Changes ###"
          echo "$GITHUB_URL/compare/$OLD_TAG...$NEW_TAG"

          git config --file .gitmodules --get-regexp path | awk '{print $2}' > submodules_list.txt

          while IFS= read -r SUBMODULE_PATH; do
              echo -e "\n#### Submodule: $SUBMODULE_PATH ####"

              OLD_COMMIT=$(git ls-tree "$OLD_TAG" -- "$SUBMODULE_PATH" 2>/dev/null | awk '{print $3}')
              echo "DEBUG: OLD_COMMIT for $SUBMODULE_PATH: $OLD_COMMIT"

              if [ -z "$OLD_COMMIT" ]; then
                  echo "⚠️ Skipping $SUBMODULE_PATH: Not present in $OLD_TAG"
              else
                  if ! git rev-parse "$OLD_COMMIT" >/dev/null 2>&1; then
                      echo "⚠️ OLD_COMMIT ($OLD_COMMIT) not found locally. Try 'git fetch --recurse-submodules'."
                  else
                      NEW_COMMIT=$(git rev-parse HEAD:"$SUBMODULE_PATH")
                      SUBMODULE_URL="$GITHUB_URL/tree/main/$SUBMODULE_PATH"
                      echo "$SUBMODULE_URL/compare/$OLD_COMMIT...$NEW_COMMIT"
                  fi
              fi
          done < submodules_list.txt

          rm -f submodules_list.txt
